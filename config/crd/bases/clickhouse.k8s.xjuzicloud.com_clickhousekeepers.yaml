---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: clickhousekeepers.clickhouse.k8s.xjuzicloud.com
spec:
  group: clickhouse.k8s.xjuzicloud.com
  names:
    kind: ClickHouseKeeper
    listKind: ClickHouseKeeperList
    plural: clickhousekeepers
    singular: clickhousekeeper
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClickHouseKeeper is the Schema for the clickhousekeepers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClickHouseKeeperSpec defines the desired state of ClickHouseKeeper
            properties:
              cluster:
                description: Cluster
                properties:
                  QuorumNodes:
                    default: 1
                    minimum: 1
                    type: integer
                  name:
                    type: string
                  serviceName:
                    type: string
                required:
                - name
                type: object
              configuration:
                description: Configuration is the configuration for the ClickHouseKeeper
                  cluster.
                properties:
                  kepperServer:
                    description: ClickHouse Keeper configuration.
                    properties:
                      logStoragePath:
                        description: Path to coordination logs, just like ZooKeeper
                          it is best to store logs on non-busy nodes. Default is "/var/lib/clickhouse/coordination/logs"
                        type: string
                      raftConfiguration:
                        properties:
                          autoForwarding:
                            default: true
                            description: Allow to forward write requests from followers
                              to leader. Default is true.
                            type: boolean
                          compressLogs:
                            default: true
                            description: Write compressed coordination logs in ZSTD
                              format. Default is true.
                            type: boolean
                          compressSnapshotsWithZstdFormat:
                            default: true
                            description: Write compressed snapshots in ZSTD format
                              (instead of custom LZ4). Default is true.
                            type: boolean
                          configurationChangeTriesCount:
                            default: 20
                            description: How many times we will try to apply configuration
                              change (add/remove server) to the cluster. Default 20.
                            format: int64
                            type: integer
                          deadSessionCheckPeriodMillisecond:
                            default: 500
                            description: How often leader will check sessions to consider
                              them dead and remove. Default is 500ms.
                            format: int64
                            type: integer
                          electionTimeoutLowerBoundMillisecond:
                            default: 1000
                            description: Lower bound of election timer (avoid too
                              often leader elections). Default is 1000ms.
                            format: int64
                            type: integer
                          electionTimeoutUpperBoundMillisecond:
                            default: 2000
                            description: Upper bound of election timer (avoid too
                              often leader elections). Default is 2000ms.
                            format: int64
                            type: integer
                          eservedLogItems:
                            default: 100000
                            description: How many log items to store (don't remove
                              during compaction). Default is 100000.
                            format: int64
                            type: integer
                          forceSync:
                            default: true
                            description: Call fsync on each change in RAFT changelog.
                              Default is true.
                            type: boolean
                          freshLogGap:
                            default: 200
                            description: When node became fresh. Default is 200.
                            format: int64
                            type: integer
                          heartBeatIntervalMillisecond:
                            default: 500
                            description: Heartbeat interval between quorum nodes.
                              Defaults 500ms.
                            format: int64
                            type: integer
                          maxRequestsBatchSize:
                            default: 100
                            description: Max size of batch in requests count before
                              it will be sent to RAFT. Default is 100.
                            format: int64
                            type: integer
                          minSessionTimeoutMillisecond:
                            default: 10000
                            description: Min client session timeout. Default is 10000ms.
                            format: int64
                            type: integer
                          operationTimeoutMillisecond:
                            default: 10000
                            description: Default client operation timeout. Default
                              is 10000ms.
                            format: int64
                            type: integer
                          quorumReads:
                            default: true
                            description: Execute read requests as writes through whole
                              RAFT consesus with similar speed. Default is false.
                            type: boolean
                          raftLogsLevel:
                            default: information
                            description: 'Log internal RAFT logs into main server
                              log level. Valid values: ''trace'', ''debug'', ''information'',
                              ''warning'', ''error'', ''fatal'', ''none''. Default
                              is information.'
                            enum:
                            - trace
                            - debug
                            - information
                            - warning
                            - error
                            - fatal
                            - none
                            type: string
                          rotateLogStorageInterval:
                            default: 100000
                            description: How many records will be stored in one log
                              storage file. Default is 100000.
                            format: int64
                            type: integer
                          sessionShutdownTimeoutMillisecond:
                            default: 10000
                            description: How much time we will wait until sessions
                              are closed during shutdown. Default is 10000ms.
                            format: int64
                            type: integer
                          sessionTimeoutMillisecond:
                            default: 100000
                            description: Max client session timeout. Default is 100000ms.
                            format: int64
                            type: integer
                          shutdownTimeoutMillisecond:
                            default: 5000
                            description: How much time we will wait until RAFT shutdown.
                              Default is 5000ms.
                            format: int64
                            type: integer
                          snapshotDistance:
                            default: 100000
                            description: How many log items we have to collect to
                              write new snapshot. Default is 100000.
                            format: int64
                            type: integer
                          snapshotsToKeep:
                            default: 3
                            description: How many compressed snapshots to keep on
                              disk. Default is 3.
                            format: int64
                            type: integer
                          staleLogGap:
                            default: 10000
                            description: When node became stale and should receive
                              snapshots from leader. Default is 10000.
                            format: int64
                            type: integer
                          startupTimeoutMillisecond:
                            default: 180000
                            description: How much time we will wait until RAFT to
                              start. Default is 180000ms.
                            format: int64
                            type: integer
                        type: object
                      snapshotStoragePath:
                        description: Path to coordination snapshots. Default is "/var/lib/clickhouse/coordination/snapshots".
                        type: string
                      storagePath:
                        description: Path to the parent directory.
                        type: string
                      tcpPort:
                        description: Port for a client to connect (default for ZooKeeper
                          is 2181).
                        type: integer
                      tcpPortSecure:
                        description: Secure port for an SSL connection between client
                          and keeper-server. 0 is disabled.
                        type: integer
                    type: object
                  listenHost:
                    default:
                    - '::'
                    description: Restriction on hosts that requests can come from.
                      If you want the server to answer all of them, specify `::`.
                      Listen specified address. Default value "::", enable IPv4 and
                      IPv6. listen_host
                    items:
                      type: string
                    type: array
                    uniqueItems: true
                  logger:
                    description: Logging settings.
                    properties:
                      compress:
                        default: true
                        description: Enable log file compress. Default is true.
                        type: boolean
                      console:
                        default: true
                        description: Enable send log to Console. Default is true.
                        type: boolean
                      count:
                        default: 1
                        description: Log rotate file count. Default is 1.
                        type: integer
                      errorLog:
                        default: /var/log/clickhouse-keeper/clickhouse-keeper.err.log
                        description: Clickhouse Keeper error log file path. Default
                          is "/var/log/clickhouse-keeper/clickhouse-keeper.err.log".
                        type: string
                      flush:
                        default: true
                        description: Default is true,
                        type: boolean
                      formatting:
                        properties:
                          names:
                            properties:
                              dateTime:
                                description: DataTime json key name, default is "date_time".
                                type: string
                              level:
                                description: Level json key name, default is "level"
                                type: string
                              loggerName:
                                description: LoggerName json key name, default is
                                  "logger_name".
                                type: string
                              message:
                                description: Message json key name, default is "message".
                                type: string
                              queryID:
                                description: QueryID json key name, default is "query_id".
                                type: string
                              sourceFile:
                                description: SourceFile json key name, default is
                                  "source_file".
                                type: string
                              sourceLine:
                                description: SourceLine json key name, default is
                                  "source_line".
                                type: integer
                              threadID:
                                description: ThreadID json key name, default is "thread_id"
                                type: string
                              threadName:
                                description: ThreadName json key name, default is
                                  "thread_name".
                                type: string
                            type: object
                          type:
                            description: Specify log format(for now, JSON only)
                            enum:
                            - none
                            - json
                            type: string
                        type: object
                      level:
                        default: information
                        description: 'Logger level. Possible levels: none (turns off
                          logging)、fatal、critical、error、warning、notice、information、debug、trace.'
                        enum:
                        - none
                        - fatal
                        - critical
                        - error
                        - warning
                        - notice
                        - information
                        - debug
                        - trace
                        type: string
                      levels:
                        properties:
                          configReloader:
                            type: string
                          logger:
                            items:
                              properties:
                                level:
                                  type: string
                                name:
                                  type: string
                              type: object
                            type: array
                        type: object
                      log:
                        default: /var/log/clickhouse-keeper/clickhouse-keeper.log
                        description: Clickhouse Keeper log file path. Default is "/var/log/clickhouse-keeper/clickhouse-keeper.log"
                        type: string
                      rotateOnOpen:
                        default: false
                        description: Default is false
                        type: boolean
                      size:
                        default: 104857600
                        description: Log rotate file size. Default is 104857600 bytes(100M).
                        format: int64
                        type: integer
                      streamCompress:
                        default: true
                        description: Default is false.
                        type: boolean
                    type: object
                  maxConnections:
                    default: 1024
                    description: The maximum number of inbound connections. Default
                      value 1024. max_connections
                    type: integer
                  maxThreadPoolFreeSize:
                    default: 1000
                    description: If the number of idle threads in the Global Thread
                      pool is greater than `max_thread_pool_free_size`, then ClickHouse
                      releases resources occupied by some threads and the pool size
                      is decreased. Threads can be created again if necessary. Default
                      value 1000.
                    type: integer
                  maxThreadPoolSize:
                    default: 100
                    description: Maximum number of threads in the Global thread pool.
                      This will default to a maximum of 100 threads if not specified.
                      max_thread_pool_size
                    type: integer
                  openSSL:
                    description: ssl server configuration.
                    properties:
                      client:
                        description: Client OpenSSL settings.
                        properties:
                          caConfig:
                            default: none
                            description: The path to the file or directory that contains
                              trusted CA certificates. If this points to a file, it
                              must be in PEM format and can contain several CA certificates.
                              If this points to a directory, it must contain one .pem
                              file per CA certificate. The filenames are looked up
                              by the CA subject name hash value. Details can be found
                              in the man page of [SSL_CTX_load_verify_locations](https://www.openssl.org/docs/man3.0/man3/SSL_CTX_load_verify_locations.html).
                            type: string
                          cacheSessions:
                            default: false
                            description: 'Enables or disables caching sessions. Must
                              be used in combination with `sessionIdContext`. Acceptable
                              values: `true`, `false`. Default is `false`.'
                            type: boolean
                          certificateFile:
                            description: The path to the client/server certificate
                              file in PEM format. You can omit it if `privateKeyFile`
                              contains the certificate.
                            type: string
                          cipherList:
                            default: ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH
                            description: Supported OpenSSL encryptions. Default is
                              `ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH`.
                            type: string
                          dhParamsFile:
                            type: string
                          disableProtocols:
                            description: Protocols that are not allowed to use. Default
                              is "".
                            enum:
                            - sslv2
                            - sslv3
                            - tlsv1
                            - tlsv1_1
                            - tlsv1_2
                            - tlsv1_3
                            items:
                              type: string
                            type: array
                          extendedVerification:
                            default: false
                            description: If enabled, verify that the certificate CN
                              or SAN matches the peer hostname. Default is false
                            type: boolean
                          fips:
                            default: false
                            description: Activates OpenSSL FIPS mode. Supported if
                              the library’s OpenSSL version supports FIPS. Default
                              is false.
                            type: boolean
                          invalidCertificateHandler:
                            description: Class (a subclass of CertificateHandler)
                              for verifying invalid certificates. Default is `ConsoleCertificateHandler`
                            properties:
                              name:
                                description: Default is `ConsoleCertificateHandler`
                                type: string
                            type: object
                          loadDefaultCAFile:
                            default: true
                            description: Wether built-in CA certificates for OpenSSL
                              will be used. ClickHouse assumes that builtin CA certificates
                              are in the file `/etc/ssl/cert.pem` (resp. the directory
                              `/etc/ssl/certs`) or in file (resp. directory) specified
                              by the environment variable `SSL_CERT_FILE` (resp. `SSL_CERT_DIR`).
                            type: boolean
                          preferServerCiphers:
                            default: false
                            description: Preferred server ciphers on the client. Default
                              is false.
                            type: boolean
                          privateKeyFile:
                            description: The path to the file with the secret key
                              of the PEM certificate. The file may contain a key and
                              certificate at the same time.
                            type: string
                          privateKeyPassphraseHandler:
                            description: 'Class (PrivateKeyPassphraseHandler subclass)
                              that requests the passphrase for accessing the private
                              key. For example: `<privateKeyPassphraseHandler>`, `<name>KeyFileHandler</name>`,
                              `<options><password>test</password></options>`, `</privateKeyPassphraseHandler>`.
                              Default is `KeyConsoleHandler`.'
                            properties:
                              name:
                                description: Name of the PrivateKeyPassphraseHandler
                                  subclass. Default is `KeyConsoleHandler`.
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: Options for the PrivateKeyPassphraseHandler
                                  subclass.
                                type: object
                            type: object
                          requireTLSv1:
                            default: false
                            description: 'Require a TLSv1 connection. Acceptable values:
                              `true`, `false`. Default is false.'
                            type: boolean
                          requireTlSv11:
                            default: false
                            description: 'Require a TLSv1.1 connection. Acceptable
                              values: `true`, `false`. Default is false.'
                            type: boolean
                          requireTlSv12:
                            default: false
                            description: 'Require a TLSv1.2 connection. Acceptable
                              values: `true`, `false`. Default is false.'
                            type: boolean
                          sessionCacheSize:
                            default: 20480
                            description: The maximum number of sessions that the server
                              caches. A value of 0 means unlimited sessions. Default
                              is [1024\*20](https://github.com/ClickHouse/boringssl/blob/master/include/openssl/ssl.h#L1978).
                            format: int64
                            type: integer
                          sessionIdContext:
                            description: 'A unique set of random characters that the
                              server appends to each generated identifier. The length
                              of the string must not exceed `SSL_MAX_SSL_SESSION_ID_LENGTH`.
                              This parameter is always recommended since it helps
                              avoid problems both if the server caches the session
                              and if the client requested caching. Default value:
                              `${application.name}`'
                            type: string
                          sessionTimeoutSecond:
                            default: 2h
                            description: Time for caching the session on the server.
                              Default is [2h](https://github.com/ClickHouse/boringssl/blob/master/include/openssl/ssl.h#L1926)
                            type: string
                          verificationDepth:
                            default: 9
                            description: The maximum length of the verification chain.
                              Verification will fail if the certificate chain length
                              exceeds the set value. Default is 9.
                            type: integer
                          verificationMode:
                            description: 'The method for checking the node’s certificates.
                              Details are in the description of the [Context](https://github.com/ClickHouse-Extras/poco/blob/master/NetSSL_OpenSSL/include/Poco/Net/Context.h)
                              class. Possible values: `none`, `relaxed`, `strict`,
                              `once`. Default is "relaxed".'
                            enum:
                            - none
                            - relaxed
                            - strict
                            - once
                            type: string
                        type: object
                      server:
                        description: Server OpenSSL settings.
                        properties:
                          caConfig:
                            default: none
                            description: The path to the file or directory that contains
                              trusted CA certificates. If this points to a file, it
                              must be in PEM format and can contain several CA certificates.
                              If this points to a directory, it must contain one .pem
                              file per CA certificate. The filenames are looked up
                              by the CA subject name hash value. Details can be found
                              in the man page of [SSL_CTX_load_verify_locations](https://www.openssl.org/docs/man3.0/man3/SSL_CTX_load_verify_locations.html).
                            type: string
                          cacheSessions:
                            default: false
                            description: 'Enables or disables caching sessions. Must
                              be used in combination with `sessionIdContext`. Acceptable
                              values: `true`, `false`. Default is `false`.'
                            type: boolean
                          certificateFile:
                            description: The path to the client/server certificate
                              file in PEM format. You can omit it if `privateKeyFile`
                              contains the certificate.
                            type: string
                          cipherList:
                            default: ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH
                            description: Supported OpenSSL encryptions. Default is
                              `ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH`.
                            type: string
                          dhParamsFile:
                            type: string
                          disableProtocols:
                            description: Protocols that are not allowed to use. Default
                              is "".
                            enum:
                            - sslv2
                            - sslv3
                            - tlsv1
                            - tlsv1_1
                            - tlsv1_2
                            - tlsv1_3
                            items:
                              type: string
                            type: array
                          extendedVerification:
                            default: false
                            description: If enabled, verify that the certificate CN
                              or SAN matches the peer hostname. Default is false
                            type: boolean
                          fips:
                            default: false
                            description: Activates OpenSSL FIPS mode. Supported if
                              the library’s OpenSSL version supports FIPS. Default
                              is false.
                            type: boolean
                          invalidCertificateHandler:
                            description: Class (a subclass of CertificateHandler)
                              for verifying invalid certificates. Default is `ConsoleCertificateHandler`
                            properties:
                              name:
                                description: Default is `ConsoleCertificateHandler`
                                type: string
                            type: object
                          loadDefaultCAFile:
                            default: true
                            description: Wether built-in CA certificates for OpenSSL
                              will be used. ClickHouse assumes that builtin CA certificates
                              are in the file `/etc/ssl/cert.pem` (resp. the directory
                              `/etc/ssl/certs`) or in file (resp. directory) specified
                              by the environment variable `SSL_CERT_FILE` (resp. `SSL_CERT_DIR`).
                            type: boolean
                          preferServerCiphers:
                            default: false
                            description: Preferred server ciphers on the client. Default
                              is false.
                            type: boolean
                          privateKeyFile:
                            description: The path to the file with the secret key
                              of the PEM certificate. The file may contain a key and
                              certificate at the same time.
                            type: string
                          privateKeyPassphraseHandler:
                            description: 'Class (PrivateKeyPassphraseHandler subclass)
                              that requests the passphrase for accessing the private
                              key. For example: `<privateKeyPassphraseHandler>`, `<name>KeyFileHandler</name>`,
                              `<options><password>test</password></options>`, `</privateKeyPassphraseHandler>`.
                              Default is `KeyConsoleHandler`.'
                            properties:
                              name:
                                description: Name of the PrivateKeyPassphraseHandler
                                  subclass. Default is `KeyConsoleHandler`.
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: Options for the PrivateKeyPassphraseHandler
                                  subclass.
                                type: object
                            type: object
                          requireTLSv1:
                            default: false
                            description: 'Require a TLSv1 connection. Acceptable values:
                              `true`, `false`. Default is false.'
                            type: boolean
                          requireTlSv11:
                            default: false
                            description: 'Require a TLSv1.1 connection. Acceptable
                              values: `true`, `false`. Default is false.'
                            type: boolean
                          requireTlSv12:
                            default: false
                            description: 'Require a TLSv1.2 connection. Acceptable
                              values: `true`, `false`. Default is false.'
                            type: boolean
                          sessionCacheSize:
                            default: 20480
                            description: The maximum number of sessions that the server
                              caches. A value of 0 means unlimited sessions. Default
                              is [1024\*20](https://github.com/ClickHouse/boringssl/blob/master/include/openssl/ssl.h#L1978).
                            format: int64
                            type: integer
                          sessionIdContext:
                            description: 'A unique set of random characters that the
                              server appends to each generated identifier. The length
                              of the string must not exceed `SSL_MAX_SSL_SESSION_ID_LENGTH`.
                              This parameter is always recommended since it helps
                              avoid problems both if the server caches the session
                              and if the client requested caching. Default value:
                              `${application.name}`'
                            type: string
                          sessionTimeoutSecond:
                            default: 2h
                            description: Time for caching the session on the server.
                              Default is [2h](https://github.com/ClickHouse/boringssl/blob/master/include/openssl/ssl.h#L1926)
                            type: string
                          verificationDepth:
                            default: 9
                            description: The maximum length of the verification chain.
                              Verification will fail if the certificate chain length
                              exceeds the set value. Default is 9.
                            type: integer
                          verificationMode:
                            description: 'The method for checking the node’s certificates.
                              Details are in the description of the [Context](https://github.com/ClickHouse-Extras/poco/blob/master/NetSSL_OpenSSL/include/Poco/Net/Context.h)
                              class. Possible values: `none`, `relaxed`, `strict`,
                              `once`. Default is "relaxed".'
                            enum:
                            - none
                            - relaxed
                            - strict
                            - once
                            type: string
                        type: object
                    type: object
                  threadPoolQueueSize:
                    default: 10000
                    description: The maximum number of jobs that can be scheduled
                      on the Global Thread pool. Increasing queue size leads to larger
                      memory usage. It is recommended to keep this value equal to
                      max_thread_pool_size. Default value 10000. thread_pool_queue_size
                    type: integer
                type: object
            required:
            - cluster
            type: object
          status:
            description: ClickHouseKeeperStatus defines the observed state of ClickHouseKeeper
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
