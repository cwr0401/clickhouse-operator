---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: clickhousekeepers.clickhouse.k8s.xjuzicloud.com
spec:
  group: clickhouse.k8s.xjuzicloud.com
  names:
    kind: ClickHouseKeeper
    listKind: ClickHouseKeeperList
    plural: clickhousekeepers
    singular: clickhousekeeper
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClickHouseKeeper is the Schema for the clickhousekeepers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClickHouseKeeperSpec defines the desired state of ClickHouseKeeper
            properties:
              configuration:
                description: config is the configuration for the ClickHouseKeeper
                  cluster
                properties:
                  listen_host:
                    description: listen_host Listen specified address.
                    items:
                      type: string
                    type: array
                  logStoragePath:
                    description: Path to coordination logs, just like ZooKeeper it
                      is best to store logs on non-busy nodes. Default is "/var/lib/clickhouse/coordination/logs"
                    type: string
                  logger:
                    description: logger
                    properties:
                      compress:
                        description: compress Default is true,
                        type: boolean
                      console:
                        type: boolean
                      count:
                        description: count Default is 1,
                        type: integer
                      errorLog:
                        description: errorlog Default is "/var/log/clickhouse-keeper/clickhouse-keeper.err.log"
                        type: string
                      flush:
                        description: flush Default is true,
                        type: boolean
                      formatting:
                        description: logger.formatting.type
                        properties:
                          names:
                            properties:
                              dateTime:
                                description: <date_time>date_time</date_time>
                                type: string
                              level:
                                description: <level>level</level>
                                type: string
                              loggerName:
                                description: <logger_name>logger_name</logger_name>
                                type: string
                              message:
                                description: <message>message</message>
                                type: string
                              queryID:
                                description: <query_id>query_id</query_id>
                                type: string
                              sourceFile:
                                description: <source_file>source_file</source_file>
                                type: string
                              sourceLine:
                                description: <source_line>source_line</source_line>
                                type: integer
                              threadID:
                                description: <thread_id>thread_id</thread_id>
                                type: string
                              threadName:
                                description: <thread_name>thread_name</thread_name>
                                type: string
                            type: object
                          type:
                            description: type Specify log format(for now, JSON only)
                            type: string
                        type: object
                      level:
                        description: 'level Possible levels: none (turns off logging)、fatal、critical、error、warning、notice、information、debug、trace.'
                        type: string
                      levels:
                        description: levels
                        properties:
                          configReloader:
                            type: string
                          logger:
                            properties:
                              level:
                                type: string
                              name:
                                type: string
                            type: object
                        type: object
                      log:
                        description: log Default is "/var/log/clickhouse-keeper/clickhouse-keeper.log"
                        type: string
                      rotateOnOpen:
                        description: rotateOnOpen Default is false,
                        type: boolean
                      size:
                        description: size Default is 100M,
                        format: int64
                        type: integer
                      streamCompress:
                        description: stream_compress Default is false,
                        type: boolean
                    type: object
                  openSSL:
                    description: OpenSSL
                    properties:
                      server:
                        description: Used for secure tcp port
                        properties:
                          caConfig:
                            type: string
                          cacheSessions:
                            type: boolean
                          certificateFile:
                            type: string
                          dhParamsFile:
                            type: string
                          disableProtocols:
                            items:
                              type: string
                            type: array
                          loadDefaultCAFile:
                            type: boolean
                          preferServerCiphers:
                            type: boolean
                          privateKeyFile:
                            type: string
                          verificationMode:
                            type: string
                        type: object
                    type: object
                  raftConfiguration:
                    properties:
                      autoForwarding:
                        description: auto_forwarding Default is true, Allow to forward
                          write requests from followers to leader.
                        type: boolean
                      compressLogs:
                        description: compress_logs Default is true, Write compressed
                          coordination logs in ZSTD format.
                        type: boolean
                      compressSnapshotsWithZstdFormat:
                        description: compress_snapshots_with_zstd_format Default is
                          true, Write compressed snapshots in ZSTD format (instead
                          of custom LZ4).
                        type: boolean
                      configurationChangeTriesCount:
                        description: configuration_change_tries_count Default 20,
                          How many times we will try to apply configuration change
                          (add/remove server) to the cluster.
                        format: int64
                        type: integer
                      dead_session_check_period_ms:
                        description: dead_session_check_period_ms Default is 500ms,
                          How often leader will check sessions to consider them dead
                          and remove.
                        format: int64
                        type: integer
                      electionTimeoutLowerBound:
                        description: election_timeout_lower_bound_ms Default is 1000ms,
                          Lower bound of election timer (avoid too often leader elections)
                        format: int64
                        type: integer
                      electionTimeoutUpperBound:
                        description: election_timeout_upper_bound_ms Default is 2000ms,
                          Upper bound of election timer (avoid too often leader elections).
                        format: int64
                        type: integer
                      eservedLogItems:
                        description: eserved_log_items Default is 100000, How many
                          log items to store (don't remove during compaction).
                        format: int64
                        type: integer
                      forceSync:
                        description: force_sync Default is  true, Call fsync on each
                          change in RAFT changelog.
                        type: boolean
                      freshLogGap:
                        description: fresh_log_gap, Default is 200, When node became
                          fresh.
                        format: int64
                        type: integer
                      heartBeatIntervalDuration:
                        description: heart_beat_interval_ms Defaults 500ms, Heartbeat
                          interval between quorum nodes.
                        format: int64
                        type: integer
                      maxRequestsBatchSize:
                        description: max_requests_batch_size, Default is 100, Max
                          size of batch in requests count before it will be sent to
                          RAFT.
                        format: int64
                        type: integer
                      minSessionTimeoutDuration:
                        description: min_session_timeout_ms Default is 10000ms, Min
                          client session timeout.
                        format: int64
                        type: integer
                      operationTimeoutDuration:
                        description: operation_timeout_ms Default is 10000ms, Default
                          client operation timeout.
                        format: int64
                        type: integer
                      quorumReads:
                        description: quorum_reads Default is false, Execute read requests
                          as writes through whole RAFT consesus with similar speed.
                        type: boolean
                      raftLogsLevel:
                        description: 'raft_logs_level Default is information, Log
                          internal RAFT logs into main server log level. Valid values:
                          ''trace'', ''debug'', ''information'', ''warning'', ''error'',
                          ''fatal'', ''none''.'
                        type: string
                      rotateLogStorageInterval:
                        description: rotate_log_storage_interval Default is 100000,
                          How many records will be stored in one log storage file.
                        format: int64
                        type: integer
                      sessionShutdownTimeoutDuration:
                        description: session_shutdown_timeout Default is 10000ms,
                          How much time we will wait until sessions are closed during
                          shutdown.
                        format: int64
                        type: integer
                      sessionTimeoutDuration:
                        description: session_timeout_ms Default is 100000ms, Max client
                          session timeout.
                        format: int64
                        type: integer
                      shutdownTimeout:
                        description: shutdown_timeout Default is 5000ms, How much
                          time we will wait until RAFT shutdown.
                        format: int64
                        type: integer
                      snapshotDistance:
                        description: snapshot_distance Default is 100000, How many
                          log items we have to collect to write new snapshot.
                        format: int64
                        type: integer
                      snapshotsToKeep:
                        description: snapshots_to_keep Default is 3, How many compressed
                          snapshots to keep on disk.
                        type: integer
                      staleLogGap:
                        description: stale_log_gap Default is 10000, When node became
                          stale and should receive snapshots from leader.
                        format: int64
                        type: integer
                      startupTimeoutDuration:
                        description: startup_timeout Default is 180000ms, How much
                          time we will wait until RAFT to start. \
                        format: int64
                        type: integer
                    required:
                    - dead_session_check_period_ms
                    type: object
                  snapshotStoragePath:
                    description: Path to coordination snapshots. Default is "/var/lib/clickhouse/coordination/snapshots".
                    type: string
                  tcpPort:
                    description: Port for a client to connect (default for ZooKeeper
                      is 2181).
                    type: integer
                  tcpPortSecure:
                    description: Secure port for an SSL connection between client
                      and keeper-server. 0 is disabled.
                    type: integer
                type: object
            type: object
          status:
            description: ClickHouseKeeperStatus defines the observed state of ClickHouseKeeper
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
